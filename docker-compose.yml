services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      # Sync your code in real-time, except for the virtual environment folder
      - .:/app
      - /app/venv
    working_dir: /app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-net
    restart: unless-stopped

  db:
    image: pgvector/pgvector:pg15  # Use pgvector-enabled PostgreSQL image
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      # database volume
      - postgres_data:/var/lib/postgresql/data
      # initialization script to create table and index
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-net
    restart: unless-stopped
    healthcheck:
      # Check if the database is ready to accept connections every 10 seconds
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  app-net:
    driver: bridge